name: Process input form

on:
  workflow_dispatch:
    inputs:
      issue:
        description: Number of issue to use
        required: true
        type: string

jobs:
  process:
    name: Process an input form
    runs-on: ubuntu-22.04
    outputs:
      workout: ${{ steps.format.outputs.format }}

    steps:
      - name: Fetch form Markdown content
        id: fetch
        env:
          issue: ${{ inputs.issue }}
          repo: ${{ github.repository }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          markdown=$(gh issue view "$issue" \
              --repo "$repo" --json body --jq '.body')

          jsonstr=$(jq --raw-input --slurp . <<< "$markdown")

          echo "markdown=$jsonstr" >> "$GITHUB_OUTPUT"

      - name: Convert to JSON
        id: convert
        uses: bewuethr/md2json-action@main
        with:
          markdown: ${{ fromJSON(steps.fetch.outputs.markdown) }}

      - name: Reformat converted output
        id: format
        env:
          json: ${{ fromJSON(steps.convert.outputs.json) }}
        run: |
          jq . <<< "$json"

          jq '
              . as $in
              | [range(0; $in | length; 2)]
              | map({key: $in[.], value: $in[.+1]})
              | from_entries
          ' <<< "$json"

          jq --compact-output '
              . as $in
              | [range(0; $in | length; 2)]
              | map({key: $in[.], value: $in[.+1]})
              | from_entries
          ' <<< "$json"

          output=$(jq --compact-output '
              . as $in
              | [range(0; $in | length; 2)]
              | map({key: $in[.], value: $in[.+1]})
              | from_entries
          ' <<< "$json")

          echo "workout=$output" >> "$GITHUB_OUTPUT"

  entry:
    name: Print workout
    runs-on: ubuntu-22.04
    needs: process

    steps:
      - name: Dump JSON
        env:
          workout: ${{ needs.process.outputs.workout }}
        run: |
          jq . <<< "$workout"
