name: Process input form

on:
  issues:
    types:
      - opened
  # workflow_dispatch:
  #   inputs:
  #     issue:
  #       description: Number of issue to use
  #       required: true
  #       type: string

jobs:
  process:
    name: Process an input form
    if: contains(github.event.issue.labels.*.name, 'workout')
    runs-on: ubuntu-22.04
    outputs:
      workout: ${{ steps.format.outputs.workout }}

    steps:
      # - name: Fetch form Markdown content
      #   id: fetch
      #   env:
      #     issue: ${{ inputs.issue }}
      #     repo: ${{ github.repository }}
      #     GITHUB_TOKEN: ${{ github.token }}
      #   run: |
      #     markdown=$(gh issue view "$issue" \
      #         --repo "$repo" --json body --jq '.body')

      #     jsonstr=$(jq --raw-input --slurp . <<< "$markdown")

      #     echo "markdown=$jsonstr" >> "$GITHUB_OUTPUT"

      - name: Convert to JSON
        id: convert
        uses: bewuethr/md2json-action@main
        with:
          markdown: ${{ github.event.issues.body }}

      - name: Reformat converted output
        id: format
        env:
          json: ${{ fromJSON(steps.convert.outputs.json) }}
        run: |
          echo "workout=$(jq --compact-output '
              .children
              | map(.children[0].value)
              | . as $in
              | [range(0; $in | length; 2)]
              | map({key: $in[.], value: $in[.+1]})
              | from_entries
          ' <<< "$json")" >> "$GITHUB_OUTPUT"

  entry:
    name: Add new entry
    needs: process
    uses: ./.github/workflows/entry.yml
    with:
      exercise: ${{ fromJSON(needs.process.outputs.workout).Exercise }}
      date: ${{ fromJSON(needs.process.outputs.workout).Date }}
      style: ${{ fromJSON(needs.process.outputs.workout).Style }}
      set1: ${{ fromJSON(format('{0}',
        fromJSON(needs.process.outputs.workout)['Set 1'])) }}
      set2: ${{ fromJSON(format('{0}',
        fromJSON(needs.process.outputs.workout)['Set 2'])) }}
      set3: ${{ fromJSON(format('{0}',
        fromJSON(needs.process.outputs.workout)['Set 3'] || 0)) }}
