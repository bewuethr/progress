name: Add new entry

on:
  workflow_call:
    inputs:
      exercise:
        description: Exercise
        required: true
        type: string
      date:
        description: Date
        required: true
        type: string
      style:
        description: Style
        required: true
        type: string
      set1:
        description: Set 1
        required: true
        type: number
      set2:
        description: Set 2
        required: true
        type: number
      set3:
        description: Set 3
        required: false
        type: number

env:
  TZ: America/Toronto

permissions:
  contents: write

jobs:
  entry:
    name: Add new entry
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.7
        with:
          show-progress: false

      - name: Update CSV
        env:
          exercise: ${{ inputs.exercise }}
          dateinput: ${{ inputs.date }}
          style: ${{ inputs.style }}
          set1: ${{ inputs.set1 }}
          set2: ${{ inputs.set2 }}
          set3: ${{ inputs.set3 }}
        run: |
          printf -v entry '%s,%s,%d,%d' \
              "$(date -d "$dateinput" +%F)" "$style" "$set1" "$set2"
          if ((set3 > 0)); then
              entry+=",$set3"
          fi

          csvfile="_data/$exercise.csv"

          printf '%s\n' "$entry" >> "$csvfile"

          yq --inplace --input-format=csv --output-format=csv \
              'sort_by(.Date)' "$csvfile"

          tmpfile=$(mktemp)

          dates=$(yq -p csv 'map(.Date) | @csv' "$csvfile")
          set1=$(yq -p csv 'map(.["Set 1"]) | @csv' "$csvfile")
          set2=$(yq -p csv 'map(.["Set 2"]) | @csv' "$csvfile")
          style=$(yq -p csv 'map(.Style) | @csv' "$csvfile")

          jqargs=(
              --arg dates "$dates"
              --arg set1 "$set1"
              --arg set2 "$set2"
              --arg style "$style"
          )

          if ((set3 > 0)); then
              set3=$(yq -p csv 'map(.["Set 3"]) | @csv' "$csvfile")
              jqargs+=(--arg set3 "$set3")
          fi

          jsonfile="assets/$exercise.json"

          jq "${jqargs[@]}" '
              .labels = ($dates | split(","))
              | .datasets[0].data = ($set1 | split(",") | map(tonumber))
              | .datasets[1].data = ($set2 | split(",") | map(tonumber))
              | if $ARGS.named.set3 != null
                then .datasets[2].data =
                  ($ARGS.named.set3 | split(",") | map(tonumber))
                else .
                end
              | .datasets[-1].data = ($style | split(","))
          ' "$jsonfile" > "$tmpfile" \
              && mv "$tmpfile" "$jsonfile"

          git config --global user.name 'github-actions'
          git config --global user.email \
              '41898282+github-actions[bot]@users.noreply.github.com'

          git add "$csvfile" "$jsonfile"
          git commit -m "Update $exercise data"
          git push
